<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAHYAAAB2AAAAAAAAAAAA
        AAAAAAAAAAAAFAAAAJsAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAmwAA
        ABQAAAAAAAAAAAAAADIAAABOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAHsAAAB7AAAAAQAA
        AE4AAAAyAAAAAAAAAAAAAAAyAAAATgAAACcAAAB3AAAAdwAAADUAAAAAAAAAAAAAAGsAAABFAAAAfAAA
        AAMAAABOAAAAMgAAAAAAAAAAAAAAMgAAAE4AAAAnAAAAdwAAAHcAAAB3AAAAdwAAAC0AAAA5AAAAcAAA
        AIQAAAAsAAAATgAAADIAAAAAAAAAAAAAADIAAABOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAFgAAAE4AAAAyAAAAAAAAAAAAAAAyAAAATgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACoAAAB6AAAAdAAAAAAAAABOAAAAMgAAAAAAAAAAAAAAMgAAAE4AAAAnAAAAdwAAAHcAAAA1AAAAAAAA
        AAAAAABrAAAASAAAAHoAAAADAAAATgAAADIAAAAAAAAAAAAAADIAAABOAAAAJwAAAHcAAAB3AAAAdwAA
        AHcAAAAtAAAAQAAAAHMAAACLAAAAJgAAAE4AAAAyAAAAAAAAAAAAAAAyAAAATgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAB4AAABOAAAAMgAAAAAAAAAAAAAAMgAAAE4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAjAAAAeAAAAGwAAAAAAAAATgAAADIAAAAAAAAAAAAAADIAAABOAAAAJwAA
        AHcAAAB3AAAANQAAAAAAAAAAAAAAawAAAEUAAAB5AAAAAwAAAE4AAAAyAAAAAAAAAAAAAAAyAAAATgAA
        ACcAAAB3AAAAdwAAAHcAAAB3AAAALQAAAEYAAAB4AAAAkAAAAB8AAABOAAAAMgAAAAAAAAAAAAAAMgAA
        AE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAlAAAATgAAADIAAAAAAAAAAAAA
        ADIAAABOAAAAAAAAAAAAAAA/AAAAiAAAAIgAAACIAAAAiAAAAD8AAAAAAAAAAAAAAE4AAAAyAAAAAAAA
        AAAAAAATAAAAkgAAAHcAAABzAAAAgwAAAAwAAAAAAAAAAAAAAAwAAAC2AAAAdwAAAHcAAACRAAAAEwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACZAAAAiAAAAIgAAACYAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAEAAJ+BAACBgQAAgAEAAJ/hAACfiQAAgYEAAIABAACf4QAAn4kAAIGBAACAAQAAn+EAAJgZ
        AACBgQAA+B8AAA==
</value>
  </data>
</root>